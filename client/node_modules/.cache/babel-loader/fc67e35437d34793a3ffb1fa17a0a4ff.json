{"ast":null,"code":"import { useReducer } from \"react\";\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, ADD_TO_CART, ADD_MULTIPLE_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, CLEAR_CART, TOGGLE_CART } from \"./actions\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products]\n      };\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        })\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","useProductReducer","initialState"],"sources":["/Users/Christina/Desktop/projects/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nimport {\n\tUPDATE_PRODUCTS,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n\tADD_TO_CART,\n\tADD_MULTIPLE_TO_CART,\n\tREMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tCLEAR_CART,\n\tTOGGLE_CART,\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\t// if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [...action.products],\n\t\t\t};\n\n\t\t// if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.categories],\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory,\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [...state.cart, action.product],\n\t\t\t};\n\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [...state.cart, ...action.products],\n\t\t\t};\n\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter((product) => {\n\t\t\t\treturn product._id !== action._id;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState,\n\t\t\t};\n\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map((product) => {\n\t\t\t\t\tif (action._id === product._id) {\n\t\t\t\t\t\tproduct.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t}\n\t\t\t\t\treturn product;\n\t\t\t\t}),\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: [],\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen,\n\t\t\t};\n\n\t\t// if it's none of these actions, do not update state at all and keep things the same!\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useProductReducer(initialState) {\n\treturn useReducer(reducer, initialState);\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SACCC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,WAAW,EACXC,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,UAAU,EACVC,WAAW,QACL,WAAW;AAElB,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,QAAQA,MAAM,CAACC,IAAI;IAClB;IACA,KAAKZ,eAAe;MACnB,OAAO;QACN,GAAGU,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAQ;MAC9B,CAAC;;IAEF;IACA,KAAKZ,iBAAiB;MACrB,OAAO;QACN,GAAGS,KAAK;QACRI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAU;MAClC,CAAC;IAEF,KAAKZ,uBAAuB;MAC3B,OAAO;QACN,GAAGQ,KAAK;QACRK,eAAe,EAAEJ,MAAM,CAACI;MACzB,CAAC;IAEF,KAAKZ,WAAW;MACf,OAAO;QACN,GAAGO,KAAK;QACRM,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAI,EAAEN,MAAM,CAACO,OAAO;MACrC,CAAC;IAEF,KAAKd,oBAAoB;MACxB,OAAO;QACN,GAAGM,KAAK;QACRO,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAI,EAAE,GAAGN,MAAM,CAACE,QAAQ;MACzC,CAAC;IAEF,KAAKR,gBAAgB;MACpB,IAAIc,QAAQ,GAAGT,KAAK,CAACO,IAAI,CAACG,MAAM,CAAEF,OAAO,IAAK;QAC7C,OAAOA,OAAO,CAACG,GAAG,KAAKV,MAAM,CAACU,GAAG;MAClC,CAAC,CAAC;MAEF,OAAO;QACN,GAAGX,KAAK;QACRM,QAAQ,EAAEG,QAAQ,CAACG,MAAM,GAAG,CAAC;QAC7BL,IAAI,EAAEE;MACP,CAAC;IAEF,KAAKb,oBAAoB;MACxB,OAAO;QACN,GAAGI,KAAK;QACRM,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAEP,KAAK,CAACO,IAAI,CAACM,GAAG,CAAEL,OAAO,IAAK;UACjC,IAAIP,MAAM,CAACU,GAAG,KAAKH,OAAO,CAACG,GAAG,EAAE;YAC/BH,OAAO,CAACM,gBAAgB,GAAGb,MAAM,CAACa,gBAAgB;UACnD;UACA,OAAON,OAAO;QACf,CAAC;MACF,CAAC;IAEF,KAAKX,UAAU;MACd,OAAO;QACN,GAAGG,KAAK;QACRM,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE;MACP,CAAC;IAEF,KAAKT,WAAW;MACf,OAAO;QACN,GAAGE,KAAK;QACRM,QAAQ,EAAE,CAACN,KAAK,CAACM;MAClB,CAAC;;IAEF;IACA;MACC,OAAON,KAAK;EAAC;AAEhB,CAAC;AAED,OAAO,SAASe,iBAAiB,CAACC,YAAY,EAAE;EAC/C,OAAO3B,UAAU,CAACU,OAAO,EAAEiB,YAAY,CAAC;AACzC"},"metadata":{},"sourceType":"module"}